<!DOCTYPE html>
<html>
<head>
<title>NICE re/streamer pro</title>
<link href="/../css/style.css" rel="stylesheet">
</head>
<body>
<script src="/../js/all.js"></script>
<script src="/../js/jquery.min.js"></script>
<script src="/../js/sockjs.min.js"></script>

<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("normal");
  switching = true;
   dir = "asc"; 
   while (switching) {
       switching = false;
    rows = table.getElementsByTagName("TR");
       for (i = 1; i < (rows.length - 1); i++) {
          shouldSwitch = false;
           x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
           if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                  shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                   shouldSwitch= true;
          break;
        }
      }
    }
    if (shouldSwitch) {
           rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
          switchcount ++;      
    } else {
	if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>

<script>
var sock = new SockJS('/echo');
sock.onopen = function() {};
sock.onclose = function() {};
 
var timen = 3;
var tim_x;
var tim_n;

function refr(n){
	$("#refr_1").text("off");
	$("#refr_2").text("3 sec");
	$("#refr_3").text("30 sec");
    $("#refr_4").text("60 sec");
    $("#refr_5").text("3 min");
    clearTimeout(tim_n);
    clearTimeout(tim_x);
switch(n) {
    case 0:
		$("#refr_1").text("* off");
        break;
    case 3:
        timen = 3;
		$("#refr_2").text("* 3 sec");
		refx();
        break;
	case 30:
        timen = 30;
		$("#refr_3").text("* 30 sec");
		refx();
        break;	
    case 60:
        timen = 60;
		$("#refr_4").text("* 60 sec");
		refx();
        break;
	case 180:
        timen = 180;
		$("#refr_5").text("* 3 min");
		refx();
        break;	
    default:
}

}

function refx(){
tim_x = setTimeout(function() {sock.send('l');refn();}, timen*1000);
}


function refn(){
tim_n = setTimeout(function() {sock.send('l');refx();}, timen*1000);
}

refx();

sock.onmessage = function(e) {
var updata1 = JSON.parse(e.data);
var updata = updata1[0];
var updatau = updata1[1];
var updatac = updata1[2];
var updatah = updata1[3];
var updataus = updata1[8];

var d = new Date();
$("#time").text("Time : "+d.toLocaleTimeString());
$("#cpu").text("CPU : "+updata1[6]+" %");
$("#tmem").text("Total mem : "+~~(updata1[7]/1000)+" Gb");
$("#tmemf").text("Free mem : "+updata1[4]+" %");
$("#upt").text("TX/RX : "+updata1[5]);

  if(updata.length){ 
	var tmp = '<table id="normal" width="98%" border="0" cellpadding="0" cellspacing="0"><tr style="background:#55575E;"><th style="width: 1%;background:#455b6d">#</th><th style="width: 40%;background:#455b6d" onclick="sortTable(1)">Channel</th><th style="width: 15%;background:#455b6d" onclick="sortTable(2)">User</th><th style="width: 15%;background:#455b6d" onclick="sortTable(3)">IP</th><th style="width: 10%;background:#455b6d" onclick="sortTable(4)">Online Time</th><th style="width: 34%;background:#455b6d" onclick="sortTable(5)">User-Agent</th><th style="width: 10%;background:#455b6d"></th></tr>';
    var col = "";
	for(var i = 0;i < updata.length;i++) {
	 if (col == "#ECF0F1"){col = "#c8d7db";} else {col = "#ECF0F1";}
	 var tmph;
	 if (updatah[i].toString().length  < 10 ){
	 tmph = updatah[i];
	 tmp = tmp+'<tr style="background: '+col+';"><td class="statustde">'+(i+1)+'</td><td  class="statustde">'+updatac[i]+'</td><td  class="status">'+updataus[i]+'</td><td  class="status">'+updata[i]+'</td><td  class="status">hls:'+tmph+'</td><td  class="status">'+updatau[i]+'</td></tr>';
	 } else{
	 tmph = new Date((new Date()) - updatah[i]).toISOString().match(/(\d{2})T(\d{2}:\d{2}:\d{2})/);
	 tmph[1]--;
	 tmp = tmp+'<tr style="background: '+col+';"><td class="statustde">'+(i+1)+'</td><td  class="statustde">'+updatac[i]+'</td><td  class="status">'+updataus[i]+'</td><td  class="status">'+updata[i]+'</td><td  class="status">'+tmph[1]+'d '+tmph[2]+'</td><td  class="status" style="white-space: nowrap;overflow: hidden;text-overflow: ellipsis;max-width: 40ch;">'+updatau[i]+'</td><td class="statustd"> <a class="a-inside delete" href="../kick/'+updataus[i]+'">Kick</a></td></tr>';
     }
	}
	tmp = tmp+'<tr><td><br></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></table>';
	document.getElementById("stat").innerHTML = tmp;  
  }else{document.getElementById("stat").innerHTML = ''; }
};
</script>
<div id="wrapper">
<div class="statusdv">
	<a id="time" class="statusv"></a>
	<a id="upt" class="statusv"></a>
	<a id="tmem" class="statusv"></a>
	<a id="tmemf" class="statusv"></a>
	<a id="cpu" class="statusv"></a>
</div>
<div class="page-header"><h2><%=page_title%>&nbsp;[ current connections ]</h2></div>
<div class="page-container">
<nav><ul>
	<%- include layouts/menu.ejs %>
	<li><a href="#">Refresh</a>
	<ul>
		<li><a id="refr_1" onClick="refr(0);" href="#">off</a></li>
		<li><a id="refr_2" onClick="refr(3);" href="#">* 3 sec</a></li>
		<li><a id="refr_3" onClick="refr(30);" href="#">30 sec</a></li>
		<li><a id="refr_4" onClick="refr(60);" href="#">60 sec</a></li>
		<li><a id="refr_5" onClick="refr(180);" href="#">3 min</a></li>
	</ul>
	</li>
	<li><a href="/logout">Logout</a></li>
</ul></nav>
<div class="page-data">
<div class="data-table" id="stat">
</div>
</div>
</div>
</body>
</html>